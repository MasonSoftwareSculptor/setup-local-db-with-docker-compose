version: '3.8'

services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-server
    environment:
      - MYSQL_ROOT_PASSWORD=MySQL@12345678
      - MYSQL_DATABASE=online-merch-store
      - MYSQL_USER=tuancv
      - MYSQL_PASSWORD=MySQL@12345678
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - docker-network

  redis-server:
    image: redis:7.2-alpine
    container_name: redis-server
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass Redis@12345678
    volumes:
      - redis-cache:/data
    networks:
      - docker-network

  rabbitmq-server:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-server
    environment:
      - RABBITMQ_DEFAULT_USER=tuancv
      - RABBITMQ_DEFAULT_PASS=RabbitMQ@12345678
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - docker-network
  
  postgres-server:
    image: postgres:15
    container_name: postgres-server
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=tuancv
      - POSTGRES_PASSWORD=Postgres@12345678
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - docker-network

  sonarqube:
    image: sonarqube:9.9.2-community
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      - postgres-server
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres-server:5432/sonarqube
      - SONAR_JDBC_USERNAME=tuancv
      - SONAR_JDBC_PASSWORD=Postgres@12345678
    ports:
      - "9000:9000"
      - "9092:9092"
    volumes:
      - sonarqube_data:/otp/sonarqube/data
      - sonarqube_extensions:/otp/sonarqube/extensions
      - sonarqube_logs:/otp/sonarqube/logs
      - sonarqube_conf:/otp/sonarqube/conf
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    networks:
      - docker-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ~/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    networks:
      - docker-network

volumes:
  mysql-data:
  redis-cache:
    driver: local
  postgresql:
  postgresql_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_conf:
  sonarqube_bundled-plugins:
networks:
  docker-network: